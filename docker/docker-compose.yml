# Configuration base for docker-compose
version: '3.7'
services:
  mongodb:
    image: mongo:4.2.1
    environment:
      MONGO_INITDB_DATABASE: harmony
    volumes:
      - ./mongo.init.d:/docker-entrypoint-initdb.d:ro
      - mongo-data:/data/db
      - mongo-conf:/data/configdb

  rabbitmq:
    # TODO: Change management WebUI credentials in production
    image: rabbitmq:3.8.2-management-alpine
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/definitions.json:ro
      - rabbit-data:/var/lib/rabbitmq

  minio:
    image: minio/minio:latest
    command: server /data
    volumes:
      - minio-data:/data

  apiserver:
    build:
      context: ../backend
      dockerfile: apiserver/Dockerfile
    image: harmony/apiserver:dev
    environment:
      FLASK_CONFIG: development
      MONGO_URI: mongodb://mongodb:27017/harmony
      MESSAGING_HOST: rabbitmq
      STORAGE_ENDPOINT: minio:9000
    depends_on:
      - mongodb
      - rabbitmq
      - minio
    ports:
      - '80:80'

  director:
    build:
      context: ../backend
      dockerfile: director/Dockerfile
    image: harmony/director:dev
    environment:
      # These three are also passed as environment variables to spawned workers
      MONGO_URI: mongodb://mongodb:27017/harmony
      MESSAGING_HOST: rabbitmq
      STORAGE_ENDPOINT: minio:9000
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongo-conf:
  mongo-data:
  rabbit-data:
  minio-data:
