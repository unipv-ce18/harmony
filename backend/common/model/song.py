from dataclasses import dataclass, asdict
from typing import Optional


@dataclass
class Song:

    id: str
    """This song's database ID or `None`"""

    title: str
    """The name of this song"""

    artist: Optional[dict]
    """A reference to the artist that produced this song"""

    release: Optional[dict]
    """A reference to release this song is part of"""

    length: str
    """The length of this song"""

    lyrics: str
    """(Synchronized) lyrics for this song"""

    counter: int
    """Count of the number of plays of a song"""

    versions: Optional[list]
    """Different version of the song with different pitch already created"""

    repr_data: Optional[dict]
    """Object with playback data generated by transcoding (i.e. EME key material, manifest path, waveform data, ...)"""

    anal_data: Optional[dict]
    """Object with additional data generated by analyzing (Key, Camelot and tempo)"""

    def __repr__(self):
        song = ''
        for k, v in asdict(self).items():
            song += f'\n\t\t\t\t{k}: {v}'
        return song

    def __str__(self):
        song = ''
        for k, v in asdict(self).items():
            song += f'{k}: {v}\n'
        return song
