@import '../../styledefs';
@import '../IconButton';

.searchPage {
  padding: 0 5vw 20vh;
  box-sizing: border-box;  // So we are ok when page leaves

  transition: opacity $transition-len-ms;

  &.updating {
    opacity: .5;
  }
}

.resultGroup {
  text-align: center;

  margin-top: 80px;
  &:first-child {
    margin-top: 40px;
  }

  // Group name
  > h3 {
    margin-bottom: 20px;

    text-transform: uppercase;
    font-size: 90%;
    letter-spacing: 2px;
    font-weight: 600;
    opacity: 50%;
  }

  // Results
  > div {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    > * {
      flex-basis: 0;  // To make them have the same weight
      flex-grow: 1;
    }
  }

  // "show more" button
  > span {
    display: inline-block;
    margin-top: 20px;
    width: 50vw;

    font-size: 70%;
    font-style: italic;
    cursor: pointer;
    text-transform: lowercase;

    background: radial-gradient(ellipse at top, rgba(#000, .5) 0%, transparent 70%);

    transition-property: padding, color, opacity;
    transition-duration: $transition-len-short-ms;
    padding-top: 6px;
    color: rgba(#eee, .8);
    opacity: .6;

    &:hover {
      opacity: 1;
      padding-top: 12px;
      color: rgba(#eee, .9);
    }
  }
}

%resultElementBase {
  outline: none;
  color: #eee;
  text-decoration: none;
  text-align: left;
}

// Result elements with an image background
%resultImageBg {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

  &::before {
    content: "";
    z-index: -1;

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background-size: cover;

    transition: transform $transition-len-ms, opacity $transition-len-ms;
    opacity: .8;
  }

  &:global(.loading)::before {
    opacity: 0;
  }
}

// Result elements with a fade-in color background on hover
%resultColorBg {
  transition: background-color $transition-len-short-ms;
  border-radius: 4px;

  &:hover, &:focus {
    background-color: rgba(#eee, .1);
  }
}

// Inner links to related entities, inherit color and show underline only on mouse over
%resultInnerLink {
  color: inherit;
  text-decoration: none;
  &:hover, &:focus {
    text-decoration: underline;
  }
}

// Artist and release controls with height transition
%appearingControls {
  height: 0;
  overflow: hidden;
  transition: height $transition-len-ms;

  > span {
    @include button-color(#eee);
    margin: 2px 6px;
    transition: background-color $transition-len-short-ms, opacity $transition-len-short-ms;
    background-color: transparent;
    &:hover {
      background-color: rgba(255, 255, 255, .2);
    }
  }
}
